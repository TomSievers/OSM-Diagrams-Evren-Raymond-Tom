@startuml

skinparam ArrowFontSize 25
skinparam ParticipantFontSize 17
skinparam SequenceGroupFontSize 15

actor Client
participant "RFID:RFID" as RFID
participant "pole:Pole" as Pole
participant "card:Card" as Card
participant "IPoleSession:IPoleSession" as PoleSession
participant "Database:IDataBaseConnector" as Database
participant "user:User" as User
participant "reservation:Reservation" as Reservation
participant "carDetails:CarDetails" as CarDetails

Activate Pole
Client -> RFID : presentCard(cardId : unsigned long long) : void
Activate RFID
Pole -> RFID : cardPresent = isCardPresent() : boolean
Activate RFID
Deactivate RFID
opt cardPresent == true
    Pole -> RFID : signature = readSignature() : string
    Activate RFID
    Deactivate RFID
    Deactivate RFID
	Pole -> Card ** : <<create>>
	Pole -> Card: cardId = getId()
	activate Card
	Pole -> Card !! : <<delete>>
	Pole -> PoleSession : inUse = hasCarInUse(cardId : unsigned long long) : boolean
    Activate PoleSession
    PoleSession -> Database : reservation = getActiveReservationForCard(cardId : unsigned long long) : Reservation
    Activate Database
    Deactivate Database
	PoleSession -> Reservation : checkedIn = isCheckedIn():boolean
    Activate Reservation
    Deactivate Reservation
	deactivate PoleSession
	opt inUse == false
		Pole -> PoleSession: openPayment = hasOpenPayment(cardId:unsigned long long) : boolean
		activate PoleSession
		PoleSession -> Database : user = getUserFromCard(cardId : unsigned long long) : User
		Activate Database
		deactivate Database
		PoleSession -> User : userId = getId() : unsigned long long
		activate User
		deactivate User
		PoleSession -> Database : hasOpenPayments = userHasOpenPayments(userId : unsigned long long) : boolean
		Activate Database
		deactivate Database
		deactivate PoleSession
		alt openPayment == false
			Pole -> PoleSession: reserved = hasReservation(cardId : unsigned long long) : boolean
			activate PoleSession
			PoleSession -> Database: reservation = getFirstReservationForCard(cardId : unsigned long long) : Reservation
			activate Database
			deactivate Database
			PoleSession -> Reservation : checkedIn = isCheckedIn() : boolean
			activate Reservation
			deactivate Reservation
			deactivate PoleSession
			alt reserved == true
				Pole -> PoleSession : checkIn(cardId:unsigned long long) : void
				activate PoleSession
				PoleSession -> Database: reservation = getFirstReservationForCard(cardId : unsigned long long) : Reservation
				activate Database
				deactivate Database
				PoleSession -> Reservation : setCheckedIn(true) : void
				activate Reservation
				deactivate Reservation
				PoleSession -> Reservation : setPickupLocation() : void
				activate Reservation
				Reservation -> CarDetails : pickupLocation = getPosition() : Position
				activate CarDetails
				deactivate CarDetails
				deactivate Reservation
				PoleSession -> Database : editReservation(reservation : Reservation) : void 
				activate Database
				deactivate Database
				deactivate PoleSession
				Pole --> Client : displayMessage(message : string) : void
			end
		else 
			Pole --> Client: displayMessage(message : string) : void
		end
	end
end
@enduml