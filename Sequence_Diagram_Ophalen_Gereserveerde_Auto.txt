@startuml

actor Client
participant "RFID:RFID" as RFID
participant "pole:Pole" as Pole
participant "card:Card" as Card
participant "IPoleSession:IPoleSession" as PoleSession
participant "IDataBaseConnector:IDataBaseConnector" as IDataBaseConnector
participant "user:User" as User
participant "reservation:Reservation" as Reservation
participant "carDetails:CarDetails" as CarDetails

Activate Pole
Client -> RFID : presentCard(cardId : unsigned long long) : void
Activate RFID
Pole -> RFID : cardPresent = isCardPresent() : boolean
Activate RFID
Deactivate RFID
opt cardPresent == true
    Pole -> RFID : signature = readSignature() : string
    Activate RFID
    Deactivate RFID
    Deactivate RFID
	Pole -> Card ** : <<create>>
	Pole -> Card: cardId = getId()
	activate Card
	Pole -> Card !! : <<delete>>
	Pole -> PoleSession: openPayment = hasOpenPayment(cardId) : boolean
	activate PoleSession
	PoleSession -> IDataBaseConnector : user = getUserFromCard(cardId : unsigned long long) : User
	Activate IDataBaseConnector
	deactivate IDataBaseConnector
	PoleSession -> User : userId = getId() : unsigned long long
	activate User
	deactivate User
	PoleSession -> IDataBaseConnector : hasOpenPayments = userHasOpenPayments(userId : unsigned long long) : boolean
	Activate IDataBaseConnector
	deactivate IDataBaseConnector
	deactivate PoleSession
	alt openPayment == false
		Pole -> PoleSession: reserved = hasReservation(cardId : unsigned long long) : boolean
		activate PoleSession
		PoleSession -> IDataBaseConnector: reservation = getFirstReservationForCard(cardId : unsigned long long) : Reservation
		activate IDataBaseConnector
		deactivate IDataBaseConnector
		PoleSession -> Reservation : checkedIn = isCheckedIn() : boolean
		activate Reservation
		deactivate Reservation
		deactivate PoleSession
		alt reserved == true
			Pole -> PoleSession : checkIn(cardId:unsigned long long) : void
			activate PoleSession
			PoleSession -> IDataBaseConnector: reservation = getFirstReservationForCard(cardId : unsigned long long) : Reservation
			activate IDataBaseConnector
			deactivate IDataBaseConnector
			PoleSession -> Reservation : setCheckedIn(true) : void
			activate Reservation
			deactivate Reservation
			PoleSession -> Reservation : setPickupLocation() : void
			activate Reservation
			Reservation -> CarDetails : pickupLocation = getPosition() : Position
			activate CarDetails
			deactivate CarDetails
			deactivate Reservation
			PoleSession -> IDataBaseConnector : editReservation(reservation : Reservation) : void 
			activate IDataBaseConnector
			deactivate IDataBaseConnector
			deactivate PoleSession
			Pole --> Client : displayMessage(message : string) : void
		end
	else 
		Pole --> Client: displayMessage(message : string) : void
	end

	
end
@enduml