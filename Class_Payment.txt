@startuml

skinparam classAttributeIconSize 0


Interface IPayment
{
	+sendInvoice(reservation: Reservation): void
	+reservationToInvoice(reservation: Reservation): OpenPayment
}
Interface IBank
{
	+recieveInvoice(id: unsigned long long, bankAccountNumber: string, amount: float): void
	+checkInvoiceStatus(id: unsigned long long): InvoiceStatus
}
Class Payment
{
	-handlingPayments: OpenPayment[0..*]
	+mainThread(): short
}

Package DataTypes
{
	Class CarDetails
	{
		-id: unsigned long long
		-brand: string
		-licensePlate: string
		-noDoors: unsigned short
		-noSeats: unsigned short
		-extras: string
		+getId():unsigned long long
		+getBrand():string
		+getLicensePlate():string
		+getNoDoors():unsigned short
		+setNoDoors(noDoors:unsigned short):void
		+getNoSeats():unsigned short
		+setNoSeats(noSeats:unsigned short):void
		+getExtras():string
		+setExtras(extras:string):void
		+getPosition():Position
	}

	Class Reservation
	{
		-id: unsigned long long
		-startTime: unsigned long long
		-endTime: unsigned long long
		-returnTime: unsigned long long
		-checkedIn: boolean
		-startMileage: unsigned long long
		-endMileage: unsigned long long
		-completed: boolean
		+getid():unsigned long long
		+getCardId():unsigned long long
		+getStartTime(): unsigned long long
		+getEndTime():unsigned long long
		+isCheckedIn():boolean
		+setChecked(checkedIn:boolean):void
		+getStartMileage():unsigned long long
		+setStartMileage(mileage:unsigned long long):void
		+getEndMileage():unsigned long long
		+setEndMileage(mileage:unsigned long long):void
		+isCompleted():boolean
		+setCompleted(isCompleted:boolean):void
		+getPickupLocation():Position
		+setPickupLocation():void
		+getCarLocation():Location
		+isCarOnPickupLocation():boolean
		+getReturnTime():unsigned long long
		+setReturnTime(time : unsigned long long) : void
	}

	Class User
	{
		-id: unsigned long long
		-name: string
		-address: string
		-reputation: short
		-accountActive: boolean
		-bankAccountNumber: string
		-email: string
		-reservations: Reservation[0..*]
		+getId():unsigned long long
		+getName():string
		+setName(name:string):void
		+getAddress():string
		+setAddress(address:string):void
		+getReputation():short
		+setReputation(reputation:short):void
		+getCardId():unsigned long long
		+getBankAccountNumber():string
		+setBankAccountNumber(bank:string):void
		+getEmail():string
		+setEmail(email:string):void
		+getCurrentReservation():Reservation
		+getSubscription():Subscription
		+setSubscription(subscription:Subscription):void
		+addReservation(reservation: Reservation): void
		+addOpenPayment(openPayment: OpenPayment): void
	}

	Class OpenPayment
	{
		-id: unsigned long long
		-amount: float
		+getId():unsigned long long
		+getAmount():float
		+getStatus():InvoiceStatus
		+setStatus(status:InvoiceStatus)
	}

	enum CarStatus
	{
		DOORS_CLOSED_AT_REDCARS
		DOORS_OPEN_AT_REDCARS
		PARKED
		ACTIVE
		PARKED_AT_REDCARS
	}

	enum Subscription
	{
		BETAALD
		GRATIS
	}
	
	enum InvoiceStatus
	{
		PENDING
		PROCESSING
		PAID
		REJECTED
	}
}

IPayment <|.. Payment
Payment --> "1" IBank
DataTypes <.. IPayment

User "1" - "0..*" Reservation
Subscription <-- User :subscription
OpenPayment "0..*" -> "1" InvoiceStatus: status
OpenPayment "0..*" -- "1" User: openPayments
CarStatus "1" <- "0..*" CarDetails: status
CarDetails "1" <- "1..*" Reservation : car
Subscription "subscription" <-- Reservation

@enduml
